name: Run tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  MPLBACKEND: agg

jobs:
  test:
    name: Test library and docs
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04"]
        python-version: ["3.10", "3.12"]
        # 3.11 tested with cibuildwheel
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Editable install
        run: |
          python -m pip install --upgrade pip
          python -m pip install --editable .
          python -m pip install -r requirements_dev.txt
          python -m pip install -r requirements_min.txt
      - name: Print dependency versions
        run: |
          phasorpy versions
      - name: Test with pytest
        run: |
          python -X dev -m pytest
      - name: Build docs
        run: |
          cd docs
          make dirhtml

  test_win_mac:
    name: Test Windows and macOS
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-2019", "macos-13"]
        python-version: ["3.10"]
        # 3.12 tested with cibuildwheel
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Editable install
        run: |
          python -m pip install --upgrade pip
          python -m pip install --editable .
          python -m pip install -r requirements_dev.txt
          python -m pip install -r requirements_min.txt
      - name: Test with pytest
        run: |
          python -X dev -m pytest
      - name: Build docs
        run: |
          cd docs
          make dirhtml

  build_wheels:
    name: Test cibuildwheel
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-22.04", "windows-2019", "macos-13"]
    steps:
      - uses: actions/checkout@v4
      - uses: pypa/cibuildwheel@v2.23.0
        env:
          # CIBW_ENVIRONMENT: "PIP_PRE=1"
          CIBW_BUILD_VERBOSITY: 3
          CIBW_BUILD: "cp311-manylinux_x86_64 cp312-win_amd64 cp312-macosx_x86_64"
          CIBW_SKIP:
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: wheels-${{ matrix.os }}

  # Building and testing manylinux2014_aarch64 too is slow.
  # See https://github.com/phasorpy/phasorpy/pull/135
  #
  #  build_wheels_arm64:
  #    name: Test Linux on AArch64
  #    runs-on: ${{ matrix.os }}
  #    strategy:
  #      fail-fast: false
  #      matrix:
  #        os: ["ubuntu-latest"]
  #    steps:
  #      - uses: actions/checkout@v4
  #      - name: Set up QEMU
  #        if: runner.os == 'Linux'
  #        uses: docker/setup-qemu-action@v3
  #        with:
  #          platforms: all
  #      - uses: pypa/cibuildwheel@v2.23.0
  #        env:
  #          CIBW_ARCHS_LINUX: aarch64
  #          CIBW_BUILD_VERBOSITY: 2
  #          CIBW_BUILD: "cp311*"
  #          CIBW_SKIP: "*musllinux*"
  #      - uses: actions/upload-artifact@v4
  #        with:
  #          path: ./wheelhouse/*.whl
  #          name: wheels-aarch64

  static_analysis:
    name: Static code analysis
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Editable install
        run: |
          python -m pip install --upgrade pip
          python -m pip install --editable .
          python -m pip install -r requirements_dev.txt
          python -m pip install -U "numpy<2.2.0"
      - name: Test with black
        run: |
          python -m black --check src/phasorpy tutorials docs
      - name: Test with blackdoc
        run: |
          python -m blackdoc --check src/phasorpy
      - name: Test with mypy
        run: |
          python -m mypy
      - name: Test with isort
        run: |
          python -m isort --check src/phasorpy tutorials
      - name: Check spelling
        run: |
          python -m codespell_lib
