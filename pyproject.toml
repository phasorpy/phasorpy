[build-system]
requires = [
    "setuptools>=68",
    "numpy",
    "cython>=3.1.0b1",
]
build-backend = "setuptools.build_meta"

[project]
name = "phasorpy"
description = "Analysis of fluorescence lifetime and hyperspectral images using the phasor approach"
readme = { file = "README.md", content-type = "text/markdown" }
dynamic = ["version"]
dependencies = [
    # sync with requirements_min.txt
    # https://scientific-python.org/specs/spec-0000/
    "numpy>=1.25.0",
    "matplotlib>=3.8.0",
    "scipy>=1.11.0",
    "click",
    "pooch",
    "tqdm",
    "scikit-learn>=1.5.0",
    # "scikit-image>=0.21.0",
    # "pandas>=2.1.0",
    "xarray>=2023.4.0",
    "tifffile>=2024.8.30",
]
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
authors = [{ name = "PhasorPy Contributors" }]
license = "MIT"
license-files = ["LICENSE.txt"]

[project.urls]
Homepage = "https://www.phasorpy.org"
Documentation = "https://www.phasorpy.org/docs/stable/"
Download = "https://pypi.org/project/phasorpy/#files"
"Source code" = "https://github.com/phasorpy/phasorpy"
"Issue tracker" = "https://github.com/phasorpy/phasorpy/issues"
"Release notes" = "https://www.phasorpy.org/docs/stable/release"

[project.scripts]
phasorpy = "phasorpy.cli:main"

[project.optional-dependencies]
docs = [
    "sphinx",
    "sphinx-issues",
    "sphinx_gallery",
    "sphinx-copybutton",
    "sphinx_click",
    "pydata-sphinx-theme>=0.16.0",
    "numpydoc",
]
all = [
    "lfdfiles>=2024.5.24",
    "sdtfile>=2024.5.24",
    "ptufile>=2024.9.14",
    "liffile>=2025.2.10",
    "pawflim",
]

[tool.setuptools]
zip-safe = false

[tool.setuptools.dynamic]
version = { attr = "phasorpy.version.__version__" }

[tool.setuptools.package-data]
phasorpy = ["py.typed"]

[tool.ruff.lint]
select = []

[tool.pylint.format]
max-line-length = 79
max-module-lines = 2500
good-names = [
    "i",
    "j",
    "k",
    "x",
    "y",
    "z",
    "c",
    "t",
    "ax",
    "fh",
    "dc",
    "re",
    "im",
]

[tool.pylint.messages_control]
disable = [
    "import-outside-toplevel",
    "wrong-import-order",
    "wrong-import-position",
]

[tool.black]
line-length = 79
target-version = ["py311"]
skip-string-normalization = true

[tool.isort]
profile = "black"
line_length = 79

[tool.codespell]
skip = "*.html,*.css,*.js,*.r64,*.map,./.git,./data,./docs/_build,./docs/tutorials,PKG-INFO,_htmlcov,pyproject.toml"
ignore-words-list = "ba,compiletime,hist,nd,unparseable,HSI"

[tool.mypy]
packages = ["phasorpy"]
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
plugins = ["numpy.typing.mypy_plugin"]
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
strict = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["phasorpy._phasorpy", "pooch.*", "scipy.*", "mkl_fft.*", "sklearn.*"]
ignore_missing_imports = true

[tool.coverage.run]
plugins = ["Cython.Coverage"]
omit = ["conftest.py", "__main__.py"]

[tool.coverage.report]
exclude_lines = ["if TYPE_CHECKING:", "plot.show()", "pragma: no cover", "pragma: ${PY_MAJOR_VERSION} no cover"]

[tool.coverage.html]
directory = "_htmlcov"

[tool.pytest.ini_options]
minversion = "7"
log_cli_level = "INFO"
# filterwarnings = ["error"]  # breaks debugging tests in VSCode (Sept. 2024)
xfail_strict = true
addopts = "-rfEXs --strict-config --strict-markers --doctest-modules --doctest-glob=*.py --doctest-glob=*.rst --ignore=src/phasorpy/_io.py"
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "ELLIPSIS",
    "IGNORE_EXCEPTION_DETAIL",
]
testpaths = ["src/phasorpy", "tests", "docs"]
norecursedirs = [
    "._",
    ".git",
    ".github",
    ".vscode",
    ".mypy_cache",
    ".pytest_cache",
    "adhoc",
    "build",
    "docs/_build",
    "fixture",
    "htmlcov",
    "_htmlcov",
    "tutorials",
    "phasorpy.egg-info",
    "phasorpy_dev",
    "phasorpy-dev",
]

[tool.cibuildwheel]
skip = "pp* cp37* cp38* cp39* cp310* *musllinux* *i686 *ppc64le *s390x cp39*win*arm64"
test-requires = ["scikit-learn", "lfdfiles", "sdtfile", "ptufile", "liffile", "pawflim", "pytest", "pytest-cov", "pytest-runner", "pytest-doctestplus", "coverage"]
test-command = "pytest {project}/tests"
